name: Deploy Lambda Infrastructure

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.0

jobs:
  plan:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3

    - name: Build Lambda layers
      run: |
        chmod +x scripts/build-layers.sh
        ./scripts/build-layers.sh

    - name: Package Lambda functions
      run: |
        chmod +x scripts/package-functions.sh
        ./scripts/package-functions.sh

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: |
        if [ "${{ github.ref }}" == "refs/heads/develop" ] || [ "${{ github.base_ref }}" == "develop" ]; then
          terraform plan -var-file="environments/dev.tfvars" -no-color
        else
          terraform plan -var-file="environments/prod.tfvars" -no-color
        fi

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3

    - name: Build and deploy
      run: |
        chmod +x scripts/deploy.sh
        ./scripts/deploy.sh

    - name: Terraform Output
      working-directory: terraform
      run: terraform output -json > ../terraform-outputs.json

    - name: Upload terraform outputs
      uses: actions/upload-artifact@v3
      with:
        name: terraform-outputs
        path: terraform-outputs.json